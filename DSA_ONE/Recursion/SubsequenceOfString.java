package DSA_ONE.Recursion;

public class SubsequenceOfString {

    public static void printSubsequence(String str, int idx, String newString) {

        // Base Case
        if (idx == str.length()) {
            System.out.println(newString);
            return;
        }

        // Storing current character with index
        char currChar = str.charAt(idx);

        // Recursive Case
        // to be
        printSubsequence(str, idx+1, newString+currChar);

        // or not to be
        printSubsequence(str, idx+1, newString);
    }

    public static void main(String[] args) {
        String str = "abc";
        printSubsequence(str,0,"");
    }
}
//

/*
Given a string, we have to find out all subsequences of it. A String is a subsequence of a given String,
that is generated by deleting some character of a given string without changing its order.
 */

// Time - 0(2^n)

// Method 1 (Pick and Donâ€™t Pick Concept)

/*
Input : abc
Output : a, b, c, ab, bc, ac, abc
 */


